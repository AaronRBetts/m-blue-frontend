{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js\";\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    const user = this.props.user;\n    this.state = {\n      selectedDay: null,\n      date: day,\n      service: '',\n      userName: user.name,\n      userEmail: user.email,\n      userPhone: '',\n      userAddress: '',\n      userNotes: ''\n    };\n\n    async function bookAppointment() {\n      const response = await fetch('http://localhost:3001/api/book', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date,\n          service,\n          userName,\n          userEmail,\n          userPhone,\n          userAddress,\n          userNotes\n        })\n      });\n    }\n  }\n\n  handleDayClick(day, _ref) {\n    let {\n      selected\n    } = _ref;\n    this.setState({\n      selectedDay: selected ? undefined : day\n    });\n    console.log(day);\n    console.log(user);\n    bookAppointment();\n  }\n\n  render() {\n    const today = new Date();\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n        showOutsideDays: true,\n        selectedDays: this.state.selectedDay,\n        onDayClick: this.handleDayClick,\n        disabledDays: {\n          before: today\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.selectedDay ? this.state.selectedDay.toLocaleDateString('en-GB', options) : 'Choose a date on the calendar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js"],"names":["React","DayPicker","Scheduler","Component","constructor","props","handleDayClick","bind","user","state","selectedDay","date","day","service","userName","name","userEmail","email","userPhone","userAddress","userNotes","bookAppointment","response","fetch","method","headers","body","JSON","stringify","selected","setState","undefined","console","log","render","today","Date","options","weekday","year","month","before","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,IAAI,EAAEC,GAFK;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,QAAQ,EAAEN,IAAI,CAACO,IAJJ;AAKXC,MAAAA,SAAS,EAAER,IAAI,CAACS,KALL;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,WAAW,EAAE,EAPF;AAQXC,MAAAA,SAAS,EAAE;AARA,KAAb;;AAWA,mBAAeC,eAAf,GAAiC;AAC/B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFoD;AAK7DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBjB,UAAAA,IADmB;AAEnBE,UAAAA,OAFmB;AAGnBC,UAAAA,QAHmB;AAInBE,UAAAA,SAJmB;AAKnBE,UAAAA,SALmB;AAMnBC,UAAAA,WANmB;AAOnBC,UAAAA;AAPmB,SAAf;AALuD,OAAnC,CAA5B;AAeD;AACF;;AAGDd,EAAAA,cAAc,CAACM,GAAD,QAAoB;AAAA,QAAd;AAAEiB,MAAAA;AAAF,KAAc;AAChC,SAAKC,QAAL,CAAc;AACZpB,MAAAA,WAAW,EAAEmB,QAAQ,GAAGE,SAAH,GAAenB;AADxB,KAAd;AAIAoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AAEAa,IAAAA,eAAe;AAChB;;AAGDa,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,IAAI,EAAE,SAAzB;AAAoCC,MAAAA,KAAK,EAAE,MAA3C;AAAmD5B,MAAAA,GAAG,EAAE;AAAxD,KAAd;AACA,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,eAAe,MADjB;AAEE,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,WAF3B;AAGE,QAAA,UAAU,EAAE,KAAKJ,cAHnB;AAIE,QAAA,YAAY,EAAE;AAAEmC,UAAAA,MAAM,EAAEN;AAAV;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACG,KAAK1B,KAAL,CAAWC,WAAX,GACG,KAAKD,KAAL,CAAWC,WAAX,CAAuBgC,kBAAvB,CAA0C,OAA1C,EAAmDL,OAAnD,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlEoD","sourcesContent":["import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport default class Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    const user = this.props.user;\n    this.state = {\n      selectedDay: null,\n      date: day,\n      service: '',\n      userName: user.name,\n      userEmail: user.email,\n      userPhone: '',\n      userAddress: '',\n      userNotes: ''\n    };\n\n    async function bookAppointment() {\n      const response = await fetch('http://localhost:3001/api/book', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date,\n          service,\n          userName,\n          userEmail,\n          userPhone,\n          userAddress,\n          userNotes,\n        })\n      })\n    }\n  }\n\n\n  handleDayClick(day, { selected }) {\n    this.setState({\n      selectedDay: selected ? undefined : day,\n    });\n\n    console.log(day)\n    console.log(user)\n\n    bookAppointment()\n  }\n\n\n  render() {\n    const today = new Date();\n    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    return (\n      <div>\n        <DayPicker \n          showOutsideDays\n          selectedDays={this.state.selectedDay}\n          onDayClick={this.handleDayClick}\n          disabledDays={{ before: today }}\n        />\n        <p>\n          {this.state.selectedDay\n            ? this.state.selectedDay.toLocaleDateString('en-GB', options)\n            : 'Choose a date on the calendar'}\n        </p>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}