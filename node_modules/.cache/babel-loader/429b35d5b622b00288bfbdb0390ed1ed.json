{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler(props) {\n  _s();\n\n  const [selectedDay, setSelectedDay] = useState('');\n  const [service, setService] = useState('a');\n  const [userPhone, setUserPhone] = useState('a');\n  const [userAddress, setUserAddress] = useState('a');\n  const [userNotes, setUserNotes] = useState('a');\n  const today = new Date();\n  var options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n\n  async function bookAppointment(day, _ref) {\n    let {\n      selected\n    } = _ref;\n    setSelectedDay(selected ? undefined : day);\n    console.log(day);\n    console.log(props.user);\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: day,\n        service,\n        userName: props.user.name,\n        userEmail: props.user.email,\n        userPhone,\n        userAddress,\n        userNotes\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n      showOutsideDays: true,\n      selectedDays: selectedDay,\n      onDayClick: bookAppointment,\n      disabledDays: {\n        before: today\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedDay ? selectedDay.toLocaleDateString('en-GB', options) : 'Choose a date on the calendar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"html\",\n      name: \"services\",\n      value: \"Water\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"html\",\n      children: \"Water supply services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"html\",\n      name: \"services\",\n      value: \"Tank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"html\",\n      children: \"Tank cleaning services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userNotes,\n      onChange: e => setUserNotes(e.target.value),\n      type: \"text\",\n      placeholder: \"Leave a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"btn-primary\",\n      type: \"submit\",\n      value: \"Schedule appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Scheduler, \"77FQykjlhF1G/DqQDQkjoe8wi/o=\");\n\n_c = Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js"],"names":["React","useState","DayPicker","Scheduler","props","selectedDay","setSelectedDay","service","setService","userPhone","setUserPhone","userAddress","setUserAddress","userNotes","setUserNotes","today","Date","options","weekday","year","month","day","bookAppointment","selected","undefined","console","log","user","response","fetch","method","headers","body","JSON","stringify","date","userName","name","userEmail","email","data","json","before","toLocaleDateString","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport default function Scheduler(props) {\n  const [selectedDay, setSelectedDay] = useState('')\n  const [service, setService] = useState('a')\n  const [userPhone, setUserPhone] = useState('a')\n  const [userAddress, setUserAddress] = useState('a')\n  const [userNotes, setUserNotes] = useState('a')\n\n  const today = new Date();\n  var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n  async function bookAppointment(day, {selected}) {\n    setSelectedDay(\n      selected ? undefined : day,\n    );\n\n    console.log(day)\n    console.log(props.user)\n\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: day,\n        service,\n        userName: props.user.name,\n        userEmail: props.user.email,\n        userPhone,\n        userAddress,\n        userNotes,\n      })\n    })\n\n    const data = await response.json();\n    console.log(data)\n  }\n\n    return (\n      <div>\n        <DayPicker \n          showOutsideDays\n          selectedDays={selectedDay}\n          onDayClick={bookAppointment}\n          disabledDays={{ before: today }}\n        />\n        <p>\n          {selectedDay\n            ? selectedDay.toLocaleDateString('en-GB', options)\n            : 'Choose a date on the calendar'}\n        </p>\n        <input type=\"radio\" id=\"html\" name=\"services\" value=\"Water\" />\n        <label for=\"html\">Water supply services</label><br/>\n        <input type=\"radio\" id=\"html\" name=\"services\" value=\"Tank\" />\n        <label for=\"html\">Tank cleaning services</label><br/>\n          <br />\n          <input value={userNotes} onChange={(e) => setUserNotes(e.target.value)} type=\"text\" placeholder=\"Leave a message\" />\n          <br />\n        <input className=\"btn-primary\" type=\"submit\" value=\"Schedule appointment\"/>\n\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}