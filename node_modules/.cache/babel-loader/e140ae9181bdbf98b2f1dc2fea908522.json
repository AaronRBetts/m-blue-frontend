{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/server/client/src/Components/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../Pages/styles.css';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#000\",\n      fontWeight: 500,\n      fontFamily: \"Verdana, Open Sans, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":=webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"##87bbfd\"\n      },\n      lineHeight: '2em',\n      border: 'none'\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nfunction CheckoutForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await fetch(`${process.env.REACT_APP_APIURL}/api/payment`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: 10000,\n            id\n          })\n        });\n        const data = await response.json();\n\n        if (data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (err) {\n        console.log(\"Error: \", err.message);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxWidth: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for your order!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CheckoutForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/server/client/src/Components/CheckoutForm.js"],"names":["React","useState","CardElement","useElements","useStripe","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","lineHeight","border","invalid","CheckoutForm","success","setSuccess","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","fetch","process","env","REACT_APP_APIURL","method","headers","body","JSON","stringify","amount","data","json","console","log","err","message","maxWidth"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport '../Pages/styles.css'\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\n\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#000\",\n      fontWeight: 500,\n      fontFamily: \"Verdana, Open Sans, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":=webkit-autofill\": {color: \"#fce883\"},\n      \"::placeholder\": {color: \"##87bbfd\"},\n      lineHeight: '2em',\n      border: 'none',\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\",\n    }\n  }\n}\n\nfunction CheckoutForm() {\n  const [success, setSuccess] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement),\n      });\n  \n      if (!error) {\n        try {\n          const {id} = paymentMethod\n          const response = await fetch(`${process.env.REACT_APP_APIURL}/api/payment`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              amount: 10000,\n              id\n            })\n          })\n          const data = await response.json();\n\n          if(data.success) {\n            console.log(\"Successful payment\")\n            setSuccess(true)\n          }\n        } catch (err) {\n          console.log(\"Error: \", err.message)\n\n        }\n      } else {\n        console.log(error.message);\n      }\n    };\n  \n    return (\n      <>\n      {!success ?       \n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <fieldset className=\"FormGroup\">\n          <div className=\"FormRow\">\n            <CardElement options={CARD_OPTIONS} />\n          </div>\n        </fieldset>\n      <button>Pay</button>\n      </form> \n      : \n      <div>\n        <h2>Thank you for your order!</h2>\n      </div>\n      }\n      </>\n\n    );\n}\n\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}