{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/server/client/src/Components/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckoutForm() {\n  _s();\n\n  const [success, setSuccess] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await fetch(\"http://localhost:3000/payment\", {\n          amount: 10000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch {}\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CheckoutForm, \"IFWI0WN8ZSrpAdPwgvXCZtP3zGI=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/server/client/src/Components/CheckoutForm.js"],"names":["React","useState","CardElement","useElements","useStripe","CheckoutForm","success","setSuccess","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","fetch","amount","data","console","log","message","maxWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACE,QAAMO,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBhB,WAApB;AAF0D,KAA3B,CAAvC;;AAKA,QAAI,CAACW,KAAL,EAAY;AACV,UAAI;AACF,cAAM;AAACM,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC5DC,UAAAA,MAAM,EAAE,KADoD;AAE5DH,UAAAA;AAF4D,SAAlC,CAA5B;;AAKA,YAAGC,QAAQ,CAACG,IAAT,CAAcjB,OAAjB,EAA0B;AACxBkB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAlB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAXD,CAWE,MAAM,CAEP;AACF,KAfD,MAeO;AACLiB,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AACD;AACF,GAzBD;;AA2BA,sBACE;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAArC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAtCQtB,Y;UAEUD,S,EACED,W;;;KAHZE,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react'\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\n\nfunction CheckoutForm() {\n  const [success, setSuccess] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement),\n      });\n  \n      if (!error) {\n        try {\n          const {id} = paymentMethod\n          const response = await fetch(\"http://localhost:3000/payment\", {\n            amount: 10000,\n            id\n          })\n\n          if(response.data.success) {\n            console.log(\"Successful payment\")\n            setSuccess(true)\n          }\n        } catch {\n\n        }\n      } else {\n        console.log(error.message);\n      }\n    };\n  \n    return (\n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <CardElement />\n        <button>Pay</button>\n      </form>\n    );\n}\n\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}