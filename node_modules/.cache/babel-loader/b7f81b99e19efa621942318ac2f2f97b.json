{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler() {\n  _s();\n\n  const [selectedDay, setSelectedDay] = useState('');\n  const [date, setDate] = useState('');\n  const [service, setService] = useState('');\n  const [userPhone, setUserPhone] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [userNotes, setUserNotes] = useState('');\n  const today = new Date();\n  var options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n\n  async function bookAppointment() {\n    setState({\n      selectedDay: selected ? undefined : day\n    });\n    console.log(day);\n    console.log(user);\n    bookAppointment();\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        service,\n        userName,\n        userEmail,\n        userPhone,\n        userAddress,\n        userNotes\n      })\n    });\n  }\n\n  function handleDayClick(day, _ref) {\n    let {\n      selected\n    } = _ref;\n    this.setState({\n      selectedDay: selected ? undefined : day\n    });\n    console.log(day);\n    console.log(user);\n    bookAppointment();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n      showOutsideDays: true,\n      selectedDays: selectedDay,\n      onDayClick: handleDayClick,\n      disabledDays: {\n        before: today\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.selectedDay ? selectedDay.toLocaleDateString('en-GB', options) : 'Choose a date on the calendar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Scheduler, \"S1q3EQC1AQjQxAePWDJ50jU2loI=\");\n\n_c = Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js"],"names":["React","DayPicker","Scheduler","selectedDay","setSelectedDay","useState","date","setDate","service","setService","userPhone","setUserPhone","userAddress","setUserAddress","userNotes","setUserNotes","today","Date","options","weekday","year","month","day","bookAppointment","setState","selected","undefined","console","log","user","response","fetch","method","headers","body","JSON","stringify","userName","userEmail","handleDayClick","before","state","toLocaleDateString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMW,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,IAAI,EAAE,SAAzB;AAAoCC,IAAAA,KAAK,EAAE,MAA3C;AAAmDC,IAAAA,GAAG,EAAE;AAAxD,GAAd;;AAEA,iBAAeC,eAAf,GAAiC;AAC/BC,IAAAA,QAAQ,CAAC;AACPrB,MAAAA,WAAW,EAAEsB,QAAQ,GAAGC,SAAH,GAAeJ;AAD7B,KAAD,CAAR;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAN,IAAAA,eAAe;AACf,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB9B,QAAAA,IADmB;AAEnBE,QAAAA,OAFmB;AAGnB6B,QAAAA,QAHmB;AAInBC,QAAAA,SAJmB;AAKnB5B,QAAAA,SALmB;AAMnBE,QAAAA,WANmB;AAOnBE,QAAAA;AAPmB,OAAf;AALuD,KAAnC,CAA5B;AAeD;;AAGD,WAASyB,cAAT,CAAwBjB,GAAxB,QAA2C;AAAA,QAAd;AAAEG,MAAAA;AAAF,KAAc;AACzC,SAAKD,QAAL,CAAc;AACZrB,MAAAA,WAAW,EAAEsB,QAAQ,GAAGC,SAAH,GAAeJ;AADxB,KAAd;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAN,IAAAA,eAAe;AAChB;;AAEC,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,eAAe,MADjB;AAEE,MAAA,YAAY,EAAEpB,WAFhB;AAGE,MAAA,UAAU,EAAEoC,cAHd;AAIE,MAAA,YAAY,EAAE;AAAEC,QAAAA,MAAM,EAAExB;AAAV;AAJhB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBACG,KAAKyB,KAAL,CAAWtC,WAAX,GACGA,WAAW,CAACuC,kBAAZ,CAA+B,OAA/B,EAAwCxB,OAAxC,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeH;;GAhEuBhB,S;;KAAAA,S","sourcesContent":["import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport default function Scheduler() {\n  const [selectedDay, setSelectedDay] = useState('')\n  const [date, setDate] = useState('')\n  const [service, setService] = useState('')\n  const [userPhone, setUserPhone] = useState('')\n  const [userAddress, setUserAddress] = useState('')\n  const [userNotes, setUserNotes] = useState('')\n\n  const today = new Date();\n  var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n  async function bookAppointment() {\n    setState({\n      selectedDay: selected ? undefined : day,\n    });\n\n    console.log(day)\n    console.log(user)\n\n    bookAppointment()\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        service,\n        userName,\n        userEmail,\n        userPhone,\n        userAddress,\n        userNotes,\n      })\n    })\n  }\n\n\n  function handleDayClick(day, { selected }) {\n    this.setState({\n      selectedDay: selected ? undefined : day,\n    });\n\n    console.log(day)\n    console.log(user)\n\n    bookAppointment()\n  }\n\n    return (\n      <div>\n        <DayPicker \n          showOutsideDays\n          selectedDays={selectedDay}\n          onDayClick={handleDayClick}\n          disabledDays={{ before: today }}\n        />\n        <p>\n          {this.state.selectedDay\n            ? selectedDay.toLocaleDateString('en-GB', options)\n            : 'Choose a date on the calendar'}\n        </p>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}