{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js\";\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: null\n    };\n  }\n\n  handleDayClick(day, _ref) {\n    let {\n      selected\n    } = _ref;\n    this.setState({\n      selectedDay: selected ? undefined : day\n    });\n    console.log(selectedDay); // async function checkAppointment(selected)\n  }\n\n  render() {\n    const today = new Date();\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n        showOutsideDays: true,\n        selectedDays: this.state.selectedDay,\n        onDayClick: this.handleDayClick,\n        disabledDays: {\n          before: today\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.selectedDay ? this.state.selectedDay.toLocaleDateString('en-GB', options) : 'Choose a date on the calendar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js"],"names":["React","DayPicker","Scheduler","Component","constructor","props","handleDayClick","bind","state","selectedDay","day","selected","setState","undefined","console","log","render","today","Date","options","weekday","year","month","before","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDH,EAAAA,cAAc,CAACI,GAAD,QAAoB;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AAChC,SAAKC,QAAL,CAAc;AACZH,MAAAA,WAAW,EAAEE,QAAQ,GAAGE,SAAH,GAAeH;AADxB,KAAd;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ,EALgC,CAOhC;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,IAAI,EAAE,SAAzB;AAAoCC,MAAAA,KAAK,EAAE,MAA3C;AAAmDZ,MAAAA,GAAG,EAAE;AAAxD,KAAd;AACA,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,eAAe,MADjB;AAEE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC,WAF3B;AAGE,QAAA,UAAU,EAAE,KAAKH,cAHnB;AAIE,QAAA,YAAY,EAAE;AAAEiB,UAAAA,MAAM,EAAEN;AAAV;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACG,KAAKT,KAAL,CAAWC,WAAX,GACG,KAAKD,KAAL,CAAWC,WAAX,CAAuBe,kBAAvB,CAA0C,OAA1C,EAAmDL,OAAnD,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AArCoD","sourcesContent":["import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport default class Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: null,\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n    this.setState({\n      selectedDay: selected ? undefined : day,\n    });\n\n    console.log(selectedDay)\n\n    // async function checkAppointment(selected)\n  }\n\n  render() {\n    const today = new Date();\n    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    return (\n      <div>\n        <DayPicker \n          showOutsideDays\n          selectedDays={this.state.selectedDay}\n          onDayClick={this.handleDayClick}\n          disabledDays={{ before: today }}\n        />\n        <p>\n          {this.state.selectedDay\n            ? this.state.selectedDay.toLocaleDateString('en-GB', options)\n            : 'Choose a date on the calendar'}\n        </p>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}