{"ast":null,"code":"var _jsxFileName = \"/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler() {\n  _s();\n\n  const [selectedDay, setSelectedDay] = useState('');\n  const [date, setDate] = useState('');\n  const [service, setService] = useState('');\n  const [userPhone, setUserPhone] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [userNotes, setUserNotes] = useState('');\n  const today = new Date();\n  var options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n\n  async function bookAppointment() {\n    setSelectedDay(selected ? undefined : day);\n    console.log(day);\n    console.log(user);\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        service,\n        userName,\n        userEmail,\n        userPhone,\n        userAddress,\n        userNotes\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n      showOutsideDays: true,\n      selectedDays: selectedDay,\n      onDayClick: bookAppointment,\n      disabledDays: {\n        before: today\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.selectedDay ? selectedDay.toLocaleDateString('en-GB', options) : 'Choose a date on the calendar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Scheduler, \"S1q3EQC1AQjQxAePWDJ50jU2loI=\");\n\n_c = Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"sources":["/home/aaron/Desktop/maraetaiblue/client/src/Components/Scheduler.js"],"names":["React","useState","DayPicker","Scheduler","selectedDay","setSelectedDay","date","setDate","service","setService","userPhone","setUserPhone","userAddress","setUserAddress","userNotes","setUserNotes","today","Date","options","weekday","year","month","day","bookAppointment","selected","undefined","console","log","user","response","fetch","method","headers","body","JSON","stringify","userName","userEmail","data","json","before","state","toLocaleDateString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMe,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,IAAI,EAAE,SAAzB;AAAoCC,IAAAA,KAAK,EAAE,MAA3C;AAAmDC,IAAAA,GAAG,EAAE;AAAxD,GAAd;;AAEA,iBAAeC,eAAf,GAAiC;AAC/BlB,IAAAA,cAAc,CACZmB,QAAQ,GAAGC,SAAH,GAAeH,GADX,CAAd;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB7B,QAAAA,IADmB;AAEnBE,QAAAA,OAFmB;AAGnB4B,QAAAA,QAHmB;AAInBC,QAAAA,SAJmB;AAKnB3B,QAAAA,SALmB;AAMnBE,QAAAA,WANmB;AAOnBE,QAAAA;AAPmB,OAAf;AALuD,KAAnC,CAA5B;AAgBA,UAAMwB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACD;;AAEC,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,eAAe,MADjB;AAEE,MAAA,YAAY,EAAElC,WAFhB;AAGE,MAAA,UAAU,EAAEmB,eAHd;AAIE,MAAA,YAAY,EAAE;AAAEiB,QAAAA,MAAM,EAAExB;AAAV;AAJhB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBACG,KAAKyB,KAAL,CAAWrC,WAAX,GACGA,WAAW,CAACsC,kBAAZ,CAA+B,OAA/B,EAAwCxB,OAAxC,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeH;;GAtDuBf,S;;KAAAA,S","sourcesContent":["import React, {useState} from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport default function Scheduler() {\n  const [selectedDay, setSelectedDay] = useState('')\n  const [date, setDate] = useState('')\n  const [service, setService] = useState('')\n  const [userPhone, setUserPhone] = useState('')\n  const [userAddress, setUserAddress] = useState('')\n  const [userNotes, setUserNotes] = useState('')\n\n  const today = new Date();\n  var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n  async function bookAppointment() {\n    setSelectedDay(\n      selected ? undefined : day,\n    );\n\n    console.log(day)\n    console.log(user)\n\n    const response = await fetch('http://localhost:3001/api/book', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        service,\n        userName,\n        userEmail,\n        userPhone,\n        userAddress,\n        userNotes,\n      })\n    })\n\n    const data = await response.json();\n    console.log(data)\n  }\n\n    return (\n      <div>\n        <DayPicker \n          showOutsideDays\n          selectedDays={selectedDay}\n          onDayClick={bookAppointment}\n          disabledDays={{ before: today }}\n        />\n        <p>\n          {this.state.selectedDay\n            ? selectedDay.toLocaleDateString('en-GB', options)\n            : 'Choose a date on the calendar'}\n        </p>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}